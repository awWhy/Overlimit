{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": "standard-with-typescript",
    "overrides": [
    ],
    "parserOptions": {
        "project": ["./tsconfig.json"],
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "rules": {
        "semi": "off",
        "space-before-function-paren": "off",
        "spaced-comment": "off",
        "indent": ["error", 4, { "SwitchCase": 1, "flatTernaryExpressions": true }],
        "curly": ["error", "all"],
        "object-shorthand": ["warn", "consistent-as-needed"],
        "comma-dangle": ["warn", "never"],
        "max-statements-per-line": ["error", { "max": 2 }],
        "no-promise-executor-return": "error",
        "no-unsafe-optional-chaining": "error",
        "no-fallthrough": "error",
        "no-unsafe-negation": ["error", { "enforceForOrderingRelations": true }],
        "no-empty": "warn",
        "no-void": "error",
        "no-useless-concat": "warn",
        "no-extra-label": "warn",
        "switch-colon-spacing": "error",
        "generator-star-spacing": "error",
        "no-var": "warn",
        "multiline-ternary": "off",
        "no-sparse-arrays": "off",
        "operator-assignment": "warn",
        "operator-linebreak": ["error", "after"],
        "eqeqeq": "warn",
        "no-loop-func": "warn",
        "prefer-object-has-own": "warn",
        "no-labels": "off",

        "@typescript-eslint/indent": "off",
        "@typescript-eslint/semi": ["error", "always"],
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/space-before-function-paren": ["error", "never"],
        "@typescript-eslint/lines-between-class-members": "off",
        "@typescript-eslint/no-unused-vars": ["warn", { "args": "all", "caughtErrors": "all", "vars": "all" }], //Can be changed, also I don't understand "ignoreRestSiblings"
        "@typescript-eslint/no-empty-function": "warn",
        "@typescript-eslint/no-empty-interface": "warn",
        "@typescript-eslint/no-invalid-this": "error",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/consistent-type-definitions": "off",
        "@typescript-eslint/unified-signatures": ["error", { "ignoreDifferentlyNamedParameters": true}],
        "@typescript-eslint/no-unnecessary-type-constraint": "warn",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/no-require-imports": "warn",
        "@typescript-eslint/no-redeclare": ["error", { "builtinGlobals": true }],
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
        "@typescript-eslint/no-meaningless-void-operator": "warn",
        "@typescript-eslint/no-inferrable-types": "warn",
        "@typescript-eslint/no-this-alias": "off",
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/prefer-namespace-keyword": "warn",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/consistent-type-assertions": ["error", { "assertionStyle": "as", "objectLiteralTypeAssertions": "allow" }],
        "@typescript-eslint/no-misused-promises": ["error", { "checksVoidReturn": false }],
        "@typescript-eslint/no-dynamic-delete": "off"
    }
}
